import os
import PythonMagick	# 该模块需要下载whl进行安装
#获取目录下文件名清单
files = os.listdir()
if not os.path.exists('icon'):
	os.mkdir('icon')  
#对文件名清单里的每一个文件名进行处理
for filename in files:
    portion = os.path.splitext(filename) # portion为名称和后缀分离后的列表
    if portion[1] ==".jpg": # 如果为JPG则更改名字
        newfile = portion[0]+".ico" # 要改的新后缀#改好的新名字
        # 进行格式转换
        img = PythonMagick.Image(filename)
        img.sample('256x256')
        path = os.path.join('icon',newfile)	
        img.write(path)
        print("%s --> %s" % (filename,newfile)) 
————————————————
版权声明：本文为CSDN博主「北巷的猫」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_41365597/article/details/102873324



import os
from PIL import Image

class Picture:
    def __init__(self):
        self.ext = ['jpg','jpeg','png']
        self.files = os.listdir('.')

    def handle_picture(self, file):
        img = Image.open(file).convert('RGBA')
        if img.size != (128, 128):  # 判断图片大小，统一改为 128*128
            # 修改图片尺寸
            img.thumbnail((128, 128))
        img.save(file.split('.')[0]+".ico")

    def run(self):
        cnt=1
        for file in self.files:
            if file.split('.')[-1] in self.ext and not os.path.exists(file.split('.')[0]+".ico"):
                print(cnt, file)
                self.handle_picture(file)
                cnt+=1

if __name__ == "__main__":
    ins = Picture()
    ins.run()
————————————————
版权声明：本文为CSDN博主「COCO56」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/COCO56/article/details/101396432

import os
# PIL : Python Imaging Library
from PIL import Image

# 获取目录下文件名
files = os.listdir()
# 图标大小
size = (256,256)

# 给图标文件单独创建一个icon目录
if not os.path.exists('icon'):
    os.mkdir('icon')

for inName in files:
    # 分离文件名与扩展名
    tmp = os.path.splitext(inName)
    # 因为python文件跟图片在同目录，所以需要判断一下
    if tmp[1] == '.png':
        outName = tmp[0] + '.ico'
        # 打开图片并设置大小
        im = Image.open(inName).resize(size)
        try:
            # 图标文件保存至icon目录
            path = os.path.join('icon', outName)
            im.save(path)

            print('{} --> {}'.format(inName, outName))
        except IOError:
            print('connot convert :',inName)
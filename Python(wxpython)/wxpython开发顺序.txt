1. import wx
2. 创建主框架 class MainFrame(wx.Frame)
3. 创建主程序 class App(wx.App)
    * 在主程序模块内 建立初始化 函数模块，确定引用 主框架，以及建立主框架中的title
4. 运行指令提前写 if __name__ == "__main__":
5. 在主框架模块中以 函数模块形式 添加界面内元素（菜单栏， 状态栏， 按钮。。。。）
    * 创建各种元素的具体规则和语法需要深入研究继续学习；
    * 在创建添加 界面内 元素的时候 就 添加元素标签label， 位置（pos）, 大小（size）；
6. 在主框架内 以单独 函数 模块的形式 编写，界面内元素对应的 动作响应函数
7. 回到界面内元素的下方邻近处 利用 self.Bind 将元素和 触发元素动作的 响应函数 绑定到一起，建立起触发条件。
8. 新弹出的界面或其他非主框架界面的 界面，应当 另外建立 界面框架模块，class OtherInterface(wx.Other)

Note: 所有的界面新建都需要初始化
    e.g.
    super(LoginDialog, self).__init__(parent, id, u'display',size=(200,200))   
/  wx.LoginDialog.__init__(self) 
/ super(self.__class__, self).__init__(parent, id, u'display',size=(200,200))


Note:
wxpython中的菜单设置是自上而下，子菜单是两头包裹的逻辑
即：

step1：菜单栏 声明

step2:
No1一级菜单 申明
No1二级菜单1（声明二级菜单，绑定id和对象，设置label, 设置图标，绑定触发函数。。。。）
No1二级菜单2（声明二级菜单，绑定id和对象，设置label, 设置图标，绑定触发函数。。。。）
No1二级菜单3（声明二级菜单，绑定id和对象，设置label, 设置图标，绑定触发函数。。。。）
No1一级菜单确认加入菜单栏

No2一级菜单 申明
No2二级菜单1（声明二级菜单，绑定id和对象，设置label, 设置图标，绑定触发函数。。。。）
No2二级菜单2（声明二级菜单，绑定id和对象，设置label, 设置图标，绑定触发函数。。。。）
No2二级菜单3（声明二级菜单，绑定id和对象，设置label, 设置图标，绑定触发函数。。。。）
No2一级菜单确认加入菜单栏
。。。。。




